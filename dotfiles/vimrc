" Colors {{{
syntax enable           " enable syntax processing
" }}}
" {{{
" Setup vundle
" `git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim`
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" https://github.com/preservim/nerdtree
" Plugin 'preservim/nerdtree'
Plugin 'ctrlpvim/ctrlp.vim'
" Plugin 'airblade/vim-gitgutter'
" Plugin 'altercation/vim-colors-solarized'
" Plugin 'austintaylor/vim-indentobject'
" Plugin 'christoomey/vim-tmux-navigator'
" Plugin 'juvenn/mustache.vim'
" Plugin 'kchmck/vim-coffee-script'
" Plugin 'ctrlpvim/ctrlp.vim'
" Plugin 'leafgarland/typescript-vim'
" Plugin 'majutsushi/tagbar'
Plugin 'rking/ag.vim'
" Plugin 'garbas/vim-snipmate'
" Plugin 'MarcWeber/vim-addon-mw-utils'
" Plugin 'tomtom/tlib_vim'
" Plugin 'nathanaelkane/vim-indent-guides'
" Plugin 'nono/vim-handlebars'
" Plugin 'pangloss/vim-javascript'
" Plugin 'wookiehangover/jshint.vim'
Plugin 'scrooloose/nerdtree'
" Plugin 'scrooloose/syntastic'
" Plugin 'slim-template/vim-slim'
" Plugin 'tpope/vim-bundler'
" Plugin 'tpope/vim-commentary'
" Plugin 'tpope/vim-cucumber'
" Plugin 'tpope/vim-dispatch'
" Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-fugitive'
" Plugin 'tpope/vim-pastie'
" Plugin 'tpope/vim-ragtag'
" Plugin 'tpope/vim-rails'
" Plugin 'tpope/vim-repeat'
" Plugin 'tpope/vim-surround'
" Plugin 'tpope/vim-unimpaired'
" Plugin 'tpope/vim-vividchalk'
" Plugin 'vim-ruby/vim-ruby'
" Plugin 'vim-scripts/Align'
" Plugin 'vim-scripts/greplace.vim'
" Plugin 'vim-scripts/matchit.zip'
" All of your Plugins must be added before the following line
call vundle#end()            " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" }}}
" Misc {{{
set backspace=indent,eol,start
set visualbell
set nocompatible       " Don't try to be vi compatible
set laststatus=2       " Status bar
" }}}
" Spaces & Tabs {{{
set tabstop=2           " 2 space tab
set expandtab           " use spaces for tabs
set shiftwidth=2        " number of spaces to use for each step of (auto)indent
set softtabstop=2       " backspace after pressing <TAB> will remove up to this many spaces
set autoindent          " copy indent from current line when starting a new line
set smartindent         " even better autoindent (e.g. add indent after '{')
filetype indent on      " load filetype-specific indent files
filetype plugin on
" }}}
" Leader Shortcuts {{{
let mapleader=","
" }}}
" UI Layout {{{
set showmode
set number              " show line numbers
set wrap                " wrap lines
set showcmd             " show command in bottom bar
set cursorline          " highlight current line
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to.
set showmatch           " higlight matching parenthesis
" }}}
" Searching {{{
set ignorecase          " ignore case when searching
set incsearch           " search as characters are entered
set hlsearch            " highlight all matches
nnoremap <leader><space> :noh<CR>
" }}}
" Folding {{{
"=== folding ===
set foldmethod=indent   " fold based on indent level
set foldnestmax=10      " max 10 depth
set foldenable          " don't fold files by default on open
nnoremap <space> za
set foldlevelstart=10   " start with fold level of 1
" }}}
" Line Shortcuts {{{
" move vertically by visual line
nnoremap j gj
nnoremap k gk
nnoremap gV `[v`]
" move to beginning/end of line
nnoremap B ^
nnoremap E $
" $/^ doesn't do anything
nnoremap $ <nop>
nnoremap ^ <nop>
"
" }}}
" jj is escape
inoremap jj <esc>
" Backups {{{
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup
" }}}
" Split navigation
" nnoremap <C-J> <C-W><C-J>
" nnoremap <C-K> <C-W><C-K>
" nnoremap <C-L> <C-W><C-L>
" nnoremap <C-H> <C-W><C-H>
" Tab navigation
nnoremap <C-N> gt
nnoremap <C-P> gT
" Split openings
set splitbelow
set splitright
" Settings from maximum-awesome {{{
" " keyboard shortcuts
" noremap <leader>l :Align
nnoremap <leader>a :Ag<space>
" nnoremap <leader>b :CtrlPBuffer<CR>
nnoremap <leader>d :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>
nnoremap <leader>t :CtrlP<CR>
nnoremap <leader>T :CtrlPClearCache<CR>:CtrlP<CR>
" nnoremap <leader>] :TagbarToggle<CR>
" nnoremap <leader><space> :call whitespace#strip_trailing()<CR>
" nnoremap <leader>g :GitGutterToggle<CR>
noremap <silent> <leader>V :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>
" }}}
" More settings from maximum-awesome {{{
set autoread                                                 " reload files when changed on disk, i.e. via `git checkout`
set encoding=utf-8
set list                                                     " show trailing whitespace
set listchars=tab:▸\ ,trail:▫
set ruler                                                    " show where you are
set scrolloff=3                                              " show context above/below cursorline
set smartcase                                                " case-sensitive search if any caps
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc
set wildmenu                                                 " show a navigable menu for tab completion
set wildmode=longest,list,full
" }}}
